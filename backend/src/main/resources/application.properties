# Server Configuration
server.port=8080

# Database Configuration (PostgreSQL for Docker)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:gallerio}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:Margot+250793833800}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Data initialization
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.gallerio=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# JWT Configuration
app.jwt-secret=${JWT_SECRET:lSOLIfCW82fxj48H/VC1JbmOzfqAE3DVEnKRcyVD5iXC5e1/cJzk8POxpi/m/BwGaWWicuiErTFzammpk8OX6A==}
app.jwt-expiration-milliseconds=${JWT_EXPIRATION:86400000}

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Upload directory configuration
app.upload.dir=uploads

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=margotgloire@gmail.com
spring.mail.password=snkr imna jjcx eimw
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true